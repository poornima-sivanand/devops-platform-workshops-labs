---
# Source: prometheus/templates/server-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    component: "prometheus"
    app: prometheus
    release: prometheus
    chart: prometheus-8.11.4
    heritage: Tiller
  name: prometheus-prometheus
data:
  alerts: |
    {}
    
  prometheus.yml: |
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    rule_files:
    - /etc/config/rules
    - /etc/config/alerts
    scrape_configs:
    - job_name: prometheus
      static_configs:
      - targets:
        - localhost:9090
    - job_name: kubernetes-pods
      kubernetes_sd_configs:
      - role: pod
      namespaces:
        names:
          - wp9gel-tools
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: kubernetes_pod_name
    
  rules: |
    {}
    
---
# Source: prometheus/templates/server-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    component: "prometheus"
    app: prometheus
    release: prometheus
    chart: prometheus-8.11.4
    heritage: Tiller
  name: prometheus-prometheus
spec:
  accessModes:
    - ReadWriteOnce
    
  resources:
    requests:
      storage: "1Gi"
---
# Source: prometheus/templates/pushgateway-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: "pushgateway"
    app: prometheus
    release: prometheus
    chart: prometheus-8.11.4
    heritage: Tiller
  name: prometheus-pushgateway
---
# Source: prometheus/templates/pushgateway-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/probe: pushgateway
    
  labels:
    component: "pushgateway"
    app: prometheus
    release: prometheus
    chart: prometheus-8.11.4
    heritage: Tiller
  name: prometheus-pushgateway
spec:
  ports:
    - name: http
      port: 9091
      protocol: TCP
      targetPort: 9091
  selector:
    component: "pushgateway"
    app: prometheus
    release: prometheus
  type: "ClusterIP"

---
# Source: prometheus/templates/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    component: "prometheus"
    app: prometheus
    release: prometheus
    chart: prometheus-8.11.4
    heritage: Tiller
  name: prometheus-prometheus
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9090
  selector:
    component: "prometheus"
    app: prometheus
    release: prometheus
  type: "ClusterIP"

---
# Source: prometheus/templates/pushgateway-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    component: "pushgateway"
    app: prometheus
    release: prometheus
    chart: prometheus-8.11.4
    heritage: Tiller
  name: prometheus-pushgateway
spec:
  selector:
    matchLabels:
      component: "pushgateway"
      app: prometheus
      release: prometheus
  replicas: 1
  template:
    metadata:
      labels:
        component: "pushgateway"
        app: prometheus
        release: prometheus
        chart: prometheus-8.11.4
        heritage: Tiller
    spec:
      serviceAccountName: prometheus-pushgateway
      containers:
        - name: prometheus-pushgateway
          image: "prom/pushgateway:v0.6.0"
          imagePullPolicy: "IfNotPresent"
          args:
          ports:
            - containerPort: 9091
          readinessProbe:
            httpGet:
              path: /#/status
              port: 9091
            initialDelaySeconds: 10
            timeoutSeconds: 10
          resources:
            {}
            

---
# Source: prometheus/templates/server-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    component: "prometheus"
    app: prometheus
    release: prometheus
    chart: prometheus-8.11.4
    heritage: Tiller
  name: prometheus-prometheus
spec:
  selector:
    matchLabels:
      component: "prometheus"
      app: prometheus
      release: prometheus
  replicas: 1
  template:
    metadata:
      labels:
        component: "prometheus"
        app: prometheus
        release: prometheus
        chart: prometheus-8.11.4
        heritage: Tiller
    spec:
      serviceAccountName: default
      initContainers:
      - name: "init-chown-data"
        image: "busybox:latest"
        imagePullPolicy: "IfNotPresent"
        resources:
          {}
          
        # 65534 is the nobody user that prometheus uses.
        command: ["chown", "-R", "65534:65534", "/data"]
        volumeMounts:
        - name: storage-volume
          mountPath: /data
          subPath: ""
      containers:
        - name: prometheus-prometheus-configmap-reload
          image: "jimmidyson/configmap-reload:v0.2.2"
          imagePullPolicy: "IfNotPresent"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9090/-/reload
          resources:
            {}
            
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true

        - name: prometheus-prometheus
          image: "prom/prometheus:v2.9.2"
          imagePullPolicy: "IfNotPresent"
          args:
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            {}
            
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
              subPath: ""
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-prometheus
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-prometheus
---
# Source: prometheus/templates/alertmanager-configmap.yaml

---
# Source: prometheus/templates/alertmanager-deployment.yaml


---
# Source: prometheus/templates/alertmanager-ingress.yaml

---
# Source: prometheus/templates/alertmanager-networkpolicy.yaml

---
# Source: prometheus/templates/alertmanager-pvc.yaml

---
# Source: prometheus/templates/alertmanager-service-headless.yaml


---
# Source: prometheus/templates/alertmanager-service.yaml


---
# Source: prometheus/templates/alertmanager-serviceaccount.yaml

---
# Source: prometheus/templates/alertmanager-statefulset.yaml


---
# Source: prometheus/templates/kube-state-metrics-clusterrole.yaml


---
# Source: prometheus/templates/kube-state-metrics-clusterrolebinding.yaml

---
# Source: prometheus/templates/kube-state-metrics-deployment.yaml


---
# Source: prometheus/templates/kube-state-metrics-networkpolicy.yaml

---
# Source: prometheus/templates/kube-state-metrics-serviceaccount.yaml

---
# Source: prometheus/templates/kube-state-metrics-svc.yaml


---
# Source: prometheus/templates/node-exporter-daemonset.yaml

---
# Source: prometheus/templates/node-exporter-podsecuritypolicy.yaml


---
# Source: prometheus/templates/node-exporter-role.yaml


---
# Source: prometheus/templates/node-exporter-rolebinding.yaml


---
# Source: prometheus/templates/node-exporter-service.yaml

---
# Source: prometheus/templates/node-exporter-serviceaccount.yaml

---
# Source: prometheus/templates/pushgateway-ingress.yaml

---
# Source: prometheus/templates/pushgateway-pvc.yaml

---
# Source: prometheus/templates/server-clusterrole.yaml


---
# Source: prometheus/templates/server-clusterrolebinding.yaml


---
# Source: prometheus/templates/server-ingress.yaml

---
# Source: prometheus/templates/server-networkpolicy.yaml


---
# Source: prometheus/templates/server-service-headless.yaml

---
# Source: prometheus/templates/server-serviceaccount.yaml


---
# Source: prometheus/templates/server-statefulset.yaml


